import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'dart:async';
import 'dart:async' show Future;
import 'package:flutter/services.dart' show rootBundle;
import 'package:flutter_app3/GLOBAL.dart';
import 'package:webview_flutter/webview_flutter.dart';
import 'package:flutter/widgets.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:flutter/material.dart';
import 'package:webview_flutter/webview_flutter.dart';

class WebViewLoadUI2 extends StatefulWidget {
  WebViewLoadUI2({Key key}) : super(key: key);

  @override
  WebViewLoadUIState2 createState() => WebViewLoadUIState2();
}

class WebViewLoadUIState2 extends State<WebViewLoadUI2> {
   String loaddata = 'assets/webpages/pg2.html';
   Completer<WebViewController> _webViewController = Completer<WebViewController>();



  Future<String> _loadLocalHTML() async {
    return await rootBundle.loadString(loaddata);
  }


   void updateLoading(bool ls) {
     this.setState((){

     });
   }

  loadwebsite(){
    String finalURL="";
    if(!finalURL.startsWith("https://")){
      finalURL = "https://"+finalURL;
    }
    if(_webViewController != null){
      updateLoading(true);
      _webViewController.loadUrl(finalURL).then((onValue){

      }).catchError((e){
        updateLoading(false);
      });
    }


  }
  @override
  Widget build(BuildContext context) {

    Widget horizontalList = new Container(
        height: 50,
        child: new ListView(
          scrollDirection: Axis.horizontal,
          children: <Widget>[
            GestureDetector(
                child: Container(
                    child: FlatButton(
                        child: Text(
                      "aaa.dart",
                      style: TextStyle(color: Colors.white),
                    )),
                    decoration: BoxDecoration(color: Colors.black)),
                onTap: () {

                  this.loaddata= 'assets/webpages/pg1.html';
                  setState(() {
                    this.loaddata= 'assets/webpages/pg1.html';
                  });


                }),
            Container(
                child: FlatButton(
                    child: Text(
                  "LOad.dart",
                  style: TextStyle(color: Colors.white),
                ),
                onPressed: ()=>{




                },
                ),
                decoration: BoxDecoration(color: Colors.black)


            ),
            FlatButton(child: Text("Explanation.dart")),
            FlatButton(child: Text("Main.dart")),
            FlatButton(child: Text("Main.dart")),
            FlatButton(child: Text("Main.dart")),
          ],
        ));

    Widget aboveListAppBar = new Container(
        margin: EdgeInsets.only(top: 20, left: 10),
        child: Row(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Text(
              "Flutter Tutorials",
              style: TextStyle(
                  fontSize: 20,
                  color: Colors.white,
                  fontWeight: FontWeight.bold),
            )
          ],
        ));

    return FutureBuilder<String>(
      future: _loadLocalHTML(),
      builder: (context, snapshot) {
        String str =
        new Uri.dataFromString(snapshot.data, mimeType: 'text/html')
            .toString();

        Fluttertoast.showToast(
            msg: str,
            toastLength: Toast.LENGTH_SHORT,
            gravity: ToastGravity.CENTER,
            timeInSecForIosWeb: 1,
            backgroundColor: Colors.red,
            textColor: Colors.white,
            fontSize: 16.0
        );

        if (snapshot.hasData) {

          return Scaffold(
              appBar: PreferredSize(
                preferredSize: Size(0, 107),
                // here is contains header and flat buttons horizontal
                child: Container(
                    child: Column(children: [
                  Container(
                    height: 80,
                    color: Colors.blue,
                    child: aboveListAppBar,
                  ),
                  horizontalList
                ])),
              ),
              body: Container(
                child: WebView(initialUrl: str,
                    javascriptMode: JavascriptMode.unrestricted,
                    onWebViewCreated: (webViewController){
                      webViewController = webViewController;
                    }



                ),
              ));

          setState(() {});
        } else if (snapshot.hasError) {
          return Scaffold(
            body: Center(
              child: Text("${snapshot.error}"),
            ),
          );
        }
        return Scaffold(
          body: Center(child: CircularProgressIndicator()),
        );
      },
    );
  }


  WebView _Webview2;


}

/*custom app bar */

class CustomAppBar extends PreferredSize {
  final Widget child;
  final double height;

  CustomAppBar({@required this.child, this.height = 80});

  @override
  Size get preferredSize => Size.fromHeight(height);

  @override
  Widget build(BuildContext context) {
    return Container(
      height: preferredSize.height,
      color: Colors.amber,
      alignment: Alignment.center,
      child: child,
    );
  }
}

/*
class LoadTabsWebpageScreen extends StatefulWidget {
  String strloc;

  LoadTabsWebpageScreen.LoadTabWepageScreen(this.strloc);

  @override
  _LoadTabsWebpageScreenState createState() =>
      _LoadTabsWebpageScreenState(strloc);
}

class _LoadTabsWebpageScreenState extends State<LoadTabsWebpageScreen> {
  dynamic strloc;

  _LoadTabsWebpageScreenState(String strlocpara) {
    this.strloc = strlocpara;
  }

  _LoadTabsWebpageScreenState._LoadTabsWebpageScreenState(this.strloc);

  @override
  Widget build(BuildContext context) {
    return Container(
      child: WebView(
        initialUrl: strloc,
      ),
    );
  }
// ···
}

*/